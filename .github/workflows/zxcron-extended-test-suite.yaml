# SPDX-License-Identifier: Apache-2.0
name: "ZXCron: Extended Test Suite"
on:
  workflow_dispatch:
  schedule:
    # Runs Extended Test Suite every three hours
    - cron: "0 */3 * * *"

permissions:
  id-token: write
  actions: write
  pull-requests: write
  statuses: write
  checks: write
  contents: read

defaults:
  run:
    shell: bash

env:
  XTS_CANDIDATE_TAG: "xts-candidate"
  XTS_PASS_GREP_PATTERN: "xts-pass-*"
  PROMOTED_GREP_PATTERN: "build-.{5}"

jobs:
  fetch-xts-candidate:
    name: Fetch XTS Candidate Tag
    runs-on: hiero-network-node-linux-medium
    outputs:
      xts-tag-exists: ${{ steps.check-tags-exist.outputs.xts-tag-exists }}
      xts-tag-commit: ${{ steps.check-tags-exist.outputs.xts-tag-commit }}
      xts-tag-commit-author: ${{ steps.check-tags-exist.outputs.xts-tag-commit-author }}
      xts-tag-commit-email: ${{ steps.check-tags-exist.outputs.xts-tag-commit-email }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      # Checkout the latest from dev
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: "0"
          ref: main
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      # Check if the xts-candidate tag exists
      # the command git branch --contains xts-tag-commit | grep --quiet <default branch>
      # will return an exit code of 1 if the tagged commit is not found on the main
      # branch.
      - name: Check for tags
        id: check-tags-exist
        env:
          GH_TOKEN: ${{ github.token }}
          XTS_PASS_PATTERN: ${{ env.XTS_PASS_GREP_PATTERN }}
          BUILD_PROMO_PATTERN: ${{ env.PROMOTED_GREP_PATTERN }}
        run: |
          # Check if the tag exists and if so grab its commit id
          set +e
          XTS_COMMIT=$(git rev-list -n 1 "${XTS_CANDIDATE_TAG}") >/dev/null 2>&1
          XTS_COMMIT_FOUND="${?}"
          set -e

          # Cancel out if the tag does not exist
          if [[ "${XTS_COMMIT_FOUND}" -ne 0 ]]; then
            gh run cancel ${{ github.run_id }}
          fi

          # Check if this commit has already been tagged xts-pass-* or build-*
          set +e
          XTS_PASS_TAGGED=$(git tag --contains "${XTS_COMMIT}" | grep -E "${XTS_PASS_PATTERN}")
          BUILD_PROMOTED_TAGGED=$(git tag --contains "${XTS_COMMIT}" | grep -E "${BUILD_PROMO_PATTERN}")
          set -e

          # Use -n; if the BUILD_PROMOTED_TAGGED/XTS_PASS_TAGGED flags are not empty than the commit has been tagged.
          if [[ -n "${XTS_PASS_TAGGED}" || -n "${BUILD_PROMOTED_TAGGED}" ]]; then
            gh run cancel ${{ github.run_id }}
          fi

          # Get the list of commits between the previous XTS Pass and the current commit
          COMMIT_LIST=""
          LATEST_XTS_PASS_TAG=$(git tag --list --sort=-version:refname "xts-pass-*" | head --lines 1)
          if [[ -n "${LATEST_XTS_PASS_TAG}" ]]; then
            echo "Latest XTS Pass Tag: ${LATEST_XTS_PASS_TAG}"
            LATEST_XTS_PASS_COMMIT=$(git rev-list -n 1 "${LATEST_XTS_PASS_TAG}")
            COMMIT_LIST="$(git log --pretty=format:"- [%h: %s](https://github.com/${{ github.repository }}/commit/%H)" "${LATEST_XTS_PASS_COMMIT}..${XTS_COMMIT}")"
          fi

          # Check if the tag exists on the main branch
          set +e
          git branch --contains "${XTS_COMMIT}" | grep --quiet main >/dev/null 2>&1
          BRANCH_ON_DEVELOP="${?}"
          set -e

          # Get commit author
          AUTHOR_NAME=$(git log -1 --format='%an' "${XTS_COMMIT}")
          AUTHOR_EMAIL=$(git log -1 --format='%ae' "${XTS_COMMIT}")

          # If the tag exists on the Main Branch set the output variables as appropriate
          # Otherwise cancel out
          if [[ "${BRANCH_ON_DEVELOP}" -eq 0 ]]; then
            echo "xts-tag-exists=true" >> "${GITHUB_OUTPUT}"
            echo "xts-tag-commit=${XTS_COMMIT}" >> "${GITHUB_OUTPUT}"
            echo "xts-tag-commit-author=${AUTHOR_NAME} <${AUTHOR_EMAIL}>" >> "${GITHUB_OUTPUT}"
            echo "xts-tag-commit-email=${AUTHOR_EMAIL}" >> "${GITHUB_OUTPUT}"
            echo "### XTS-Candidate commit found" >>  "${GITHUB_STEP_SUMMARY}"
            echo "xts-tag-commit=${XTS_COMMIT}" >> "${GITHUB_STEP_SUMMARY}"
            echo "### Commit List" >> "${GITHUB_STEP_SUMMARY}"
            echo "${COMMIT_LIST}" >> "${GITHUB_STEP_SUMMARY}"

            git push --delete origin "${XTS_CANDIDATE_TAG}"
            git tag -d "${XTS_CANDIDATE_TAG}"
          else
            gh run cancel ${{ github.run_id }}
          fi

  extended-test-suite:
    name: Execute eXtended Test Suite
    uses: ./.github/workflows/node-zxc-compile-application-code.yaml
    needs: fetch-xts-candidate
    if: ${{ needs.fetch-xts-candidate.result == 'success' && needs.fetch-xts-candidate.outputs.xts-tag-exists == 'true' }}
    with:
      custom-job-label: Execute eXtended Test Suite
      enable-timing-sensitive-tests: true
      enable-time-consuming-tests: true
      enable-hammer-tests: true
      enable-hapi-tests-time-consuming: true
      enable-network-log-capture: true
      ref: ${{ needs.fetch-xts-candidate.outputs.xts-tag-commit }}
    secrets:
      access-token: ${{ secrets.GITHUB_TOKEN }}
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}

  abbreviated-panel:
    name: JRS Panel
    uses: ./.github/workflows/zxc-jrs-regression.yaml
    needs: fetch-xts-candidate
    if: ${{ needs.fetch-xts-candidate.result == 'success' && needs.fetch-xts-candidate.outputs.xts-tag-exists == 'true' }}
    with:
      custom-job-name: "Platform SDK"
      panel-config: "configs/suites/GCP-PRCheck-Abbrev-4N.json"
      ref: ${{ needs.fetch-xts-candidate.outputs.xts-tag-commit }} # pass the xts-candidate tag to the JRS panel for checkout
      branch-name: ${{ github.head_ref || github.ref_name }}
      base-branch-name: ${{ github.base_ref || '' }}
      slack-results-channel: "regression-test"
      slack-summary-channel: "regression-test"
      use-branch-for-slack-channel: false
    secrets:
      access-token: ${{ secrets.PLATFORM_GH_ACCESS_TOKEN }}
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
      jrs-ssh-user-name: ${{ secrets.PLATFORM_JRS_SSH_USER_NAME }}
      jrs-ssh-key-file: ${{ secrets.PLATFORM_JRS_SSH_KEY_FILE }}
      gcp-project-number: ${{ secrets.PLATFORM_GCP_PROJECT_NUMBER }}
      gcp-sa-key-contents: ${{ secrets.PLATFORM_GCP_KEY_FILE }}
      slack-api-token: ${{ secrets.PLATFORM_SLACK_API_TOKEN }}
      grafana-agent-username: ${{ secrets.GRAFANA_AGENT_USERNAME }}
      grafana-agent-password: ${{ secrets.GRAFANA_AGENT_PASSWORD }}

  hedera-node-jrs-panel:
    name: Hedera Node JRS Panel
    uses: ./.github/workflows/zxc-jrs-regression.yaml
    needs: fetch-xts-candidate
    if: ${{ needs.fetch-xts-candidate.result == 'success' && needs.fetch-xts-candidate.outputs.xts-tag-exists == 'true' }}
    with:
      custom-job-name: "Abbrev Update Test"
      ref: ${{ needs.fetch-xts-candidate.outputs.xts-tag-commit }} # pass the xts-candidate tag to the JRS panel for checkout
      branch-name: ${{ github.head_ref || github.ref_name }}
      hedera-tests-enabled: true
      use-branch-for-slack-channel: false
      panel-config: "configs/services/suites/daily/GCP-Daily-Services-Abbrev-DAB-Update-4N-2C.json"
    secrets:
      access-token: ${{ secrets.PLATFORM_GH_ACCESS_TOKEN }}
      jrs-ssh-user-name: ${{ secrets.PLATFORM_JRS_SSH_USER_NAME }}
      jrs-ssh-key-file: ${{ secrets.PLATFORM_JRS_SSH_KEY_FILE }}
      gcp-project-number: ${{ secrets.PLATFORM_GCP_PROJECT_NUMBER }}
      gcp-sa-key-contents: ${{ secrets.PLATFORM_GCP_KEY_FILE }}
      slack-api-token: ${{ secrets.PLATFORM_SLACK_API_TOKEN }}
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
      grafana-agent-username: ${{ secrets.GRAFANA_AGENT_USERNAME }}
      grafana-agent-password: ${{ secrets.GRAFANA_AGENT_PASSWORD }}

  sdk-tck-regression-panel:
    name: SDK TCK Regression Panel
    needs: fetch-xts-candidate
    if: ${{ needs.fetch-xts-candidate.result == 'success' && needs.fetch-xts-candidate.outputs.xts-tag-exists == 'true' }}
    uses: ./.github/workflows/zxc-tck-regression.yaml
    with:
      ref: ${{ needs.fetch-xts-candidate.outputs.xts-tag-commit }} # pass the xts-candidate tag to the JRS panel for checkout
      custom-job-name: "SDK TCK Regression"

  tag-for-promotion:
    name: Tag as XTS-Passing
    runs-on: hiero-network-node-linux-medium
    needs:
      - abbreviated-panel
      - extended-test-suite
      - fetch-xts-candidate
      - hedera-node-jrs-panel
    #  - sdk-tck-regression-panel # currently we are not gating XTS-PASS on TCK Regression Panel success
    if: ${{ needs.abbreviated-panel.result == 'success' || needs.extended-test-suite.result == 'success' || needs.hedera-node-jrs-panel.result == 'success' }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout Tagged Code
        id: checkout_tagged_code
        if: ${{ needs.fetch-xts-candidate.outputs.xts-tag-exists == 'true' }}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: "0"
          ref: ${{ needs.fetch-xts-candidate.outputs.xts-tag-commit }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Import GPG Key
        id: gpg_importer
        uses: step-security/ghaction-import-gpg@6c8fe4d0126a59d57c21f87c9ae5dd3451fa3cca # v6.1.0
        with:
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_user_signingkey: true
          gpg_private_key: ${{ secrets.SVCS_GPG_KEY_CONTENTS }}
          passphrase: ${{ secrets.SVCS_GPG_KEY_PASSPHRASE }}

      # Now that the XTS suite has run we should be able to tag for promotion
      - name: Tag for XTS promotion
        run: |
          EPOCH_TIME=$(date +%s)
          TAG=xts-pass-${EPOCH_TIME}
          git tag --annotate ${TAG} --message "chore: tagging commit for build candidate promotion"
          git push --set-upstream origin --tags
          echo "### Commit Tagged for Promotion" >>  "${GITHUB_STEP_SUMMARY}"
          echo "promotion-tag=${TAG}" >> "${GITHUB_STEP_SUMMARY}"

  report-success:
    name: Report XTS execution success
    runs-on: hiero-network-node-linux-medium
    needs:
      - abbreviated-panel
      - extended-test-suite
      - fetch-xts-candidate
      - hedera-node-jrs-panel
      - tag-for-promotion
    if: ${{ (needs.abbreviated-panel.result == 'success' &&
      needs.extended-test-suite.result == 'success' &&
      needs.fetch-xts-candidate.result == 'success' &&
      needs.hedera-node-jrs-panel.result == 'success' &&
      needs.tag-for-promotion.result == 'success') &&
      !cancelled() }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Report Success (slack)
        uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52 # v2.1.0
        with:
          webhook: ${{ secrets.SLACK_CITR_OPERATIONS_WEBHOOK }}
          webhook-type: incoming-webhook
          payload-templated: true
          payload: |
            {
              "attachments": [
                {
                  "color": "#00FF00",
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": ":tada: Hiero Consensus Node - eXtended Test Suite Passing Report",
                        "emoji": true
                      }
                    },
                    {
                      "type": "divider"
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*XTS Job Succeeded. Test panel status below*"
                      },
                      "fields": [
                        {
                          "type": "plain_text",
                          "text": "Fetch XTS Candidate Tag"
                        },
                        {
                          "type": "plain_text",
                          "text": "${{ needs.fetch-xts-candidate.result }}"
                        },
                        {
                          "type": "plain_text",
                          "text": "Execute eXtended Test Suite"
                        },
                        {
                          "type": "plain_text",
                          "text": "${{ needs.extended-test-suite.result }}"
                        },
                        {
                          "type": "plain_text",
                          "text": "JRS Panel"
                        },
                        {
                          "type": "plain_text",
                          "text": "${{ needs.abbreviated-panel.result }}"
                        },
                        {
                          "type": "plain_text",
                          "text": "Hedera Node JRS Panel"
                        },
                        {
                          "type": "plain_text",
                          "text": "${{ needs.hedera-node-jrs-panel.result }}"
                        },
                        {
                          "type": "plain_text",
                          "text": "Tag as XTS-Passing"
                        },
                        {
                          "type": "plain_text",
                          "text": "${{ needs.tag-for-promotion.result }}"
                        }
                      ]
                    },
                    {
                      "type": "divider"
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*Workflow and Commit Information*\nFor a full list of executed tests see `Workflow run URL` below"
                      },
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Source Commit*:"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "<${{ github.server_url }}/${{ github.repository }}/commit/${{ needs.fetch-xts-candidate.outputs.xts-tag-commit }}>"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Commit author*:"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "${{ needs.fetch-xts-candidate.outputs.xts-tag-commit-author }}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Workflow run ID*:"
                        },
                        {
                          "type": "mrkdwn",
                          "text": " ${{ github.run_id }}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Workflow run URL*:"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}>"
                        }
                      ]
                    }
                  ]
                }
              ]
            }

  report-failure:
    name: Report XTS execution failure
    runs-on: hiero-network-node-linux-medium
    needs:
      - abbreviated-panel
      - extended-test-suite
      - fetch-xts-candidate
      - hedera-node-jrs-panel
      - tag-for-promotion
    if: ${{ (needs.abbreviated-panel.result != 'success' ||
      needs.extended-test-suite.result != 'success' ||
      needs.fetch-xts-candidate.result != 'success' ||
      needs.hedera-node-jrs-panel.result != 'success' ||
      needs.tag-for-promotion.result != 'success') &&
      !cancelled() && always() }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: "0"
          ref: main
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Collect run logs in a log file
        env:
          GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        continue-on-error: true
        run: |
          for job_id in $(gh run view ${{ github.run_id }} --json jobs --jq '.jobs | map(.databaseId) | .[0:-1] | .[]'); do
            echo "Fetching logs for job $job_id..."

            current_job_name=$(gh run view ${{ github.run_id }} --json jobs | jq --argjson job_id "$job_id" -r '.jobs[] | select(.databaseId == $job_id) | .name')

            echo "Logs for job $current_job_name :" >> run.log

            gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/hiero-ledger/hiero-consensus-node/actions/jobs/$job_id/logs >> run.log
          done

      - name: Upload log as artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        continue-on-error: true
        with:
          path: run.log

      - name: Find Commit Author in Slack
        id: find-commit-author-slack
        continue-on-error: true
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_CITR_BOT_TOKEN }}
          EMAIL: ${{ needs.fetch-xts-candidate.outputs.xts-tag-commit-email }}
        run: |
          SLACK_USER_ID=$(curl -s -X GET "https://slack.com/api/users.list" \
            -H "Authorization: Bearer ${SLACK_BOT_TOKEN}" | jq -r --arg email "${EMAIL}" \
            '.members[] | select((.profile.email // "" | ascii_downcase) == ($email | ascii_downcase)) | .name')

          if [[ -z "${SLACK_USER_ID}" || "${SLACK_USER_ID}" == "null" ]]; then
            echo "No Slack user found for email: ${EMAIL}"
            SLACK_USER_ID="No matching slack user found"
          else
            echo "Found slack user for email: ${EMAIL}"
            SLACK_USER_ID="<@${SLACK_USER_ID}>"
          fi
          echo "slack-user-id=${SLACK_USER_ID}" >> "${GITHUB_OUTPUT}"

      - name: Build Slack Payload Message
        id: payload
        run: |
          cat <<EOF > slack_payload.json
          {
            "attachments": [
              {
                "color": "#FF0000",
                "blocks": [
                  {
                    "type": "header",
                    "text": {
                      "type": "plain_text",
                      "text": ":grey_exclamation: Hiero Consensus Node - eXtended Test Suite Error Report",
                      "emoji": true
                    }
                  },
                  {
                    "type": "divider"
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "*XTS Job Resulted in failure. See status below.*"
                    },
                    "fields": [
                      {
                        "type": "plain_text",
                        "text": "Fetch XTS Candidate Tag"
                      },
                      {
                        "type": "plain_text",
                        "text": "${{ needs.fetch-xts-candidate.result }}"
                      },
                      {
                        "type": "plain_text",
                        "text": "Execute eXtended Test Suite"
                      },
                      {
                        "type": "plain_text",
                        "text": "${{ needs.extended-test-suite.result }}"
                      },
                      {
                        "type": "plain_text",
                        "text": "JRS Panel"
                      },
                      {
                        "type": "plain_text",
                        "text": "${{ needs.abbreviated-panel.result }}"
                      },
                      {
                        "type": "plain_text",
                        "text": "Hedera Node JRS Panel"
                      },
                      {
                        "type": "plain_text",
                        "text": "${{ needs.hedera-node-jrs-panel.result }}"
                      },
                      {
                        "type": "plain_text",
                        "text": "Tag as XTS-Passing"
                      },
                      {
                        "type": "plain_text",
                        "text": "${{ needs.tag-for-promotion.result }}"
                      }
                    ]
                  },
                  {
                    "type": "divider"
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "*Workflow and Commit Information*"
                    },
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Source Commit*:"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "<${{ github.server_url }}/${{ github.repository }}/commit/${{ needs.fetch-xts-candidate.outputs.xts-tag-commit }}>"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Commit author*:"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "${{ needs.fetch-xts-candidate.outputs.xts-tag-commit-author }}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Slack user*:"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "${{ steps.find-commit-author-slack.outputs.slack-user-id }}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Workflow run ID*:"
                      },
                      {
                        "type": "mrkdwn",
                        "text": " ${{ github.run_id }}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Workflow run URL*:"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}>"
                      }
                    ]
                  }
                ]
              }
            ]
          }
          EOF

      - name: Report failure (slack citr-operations)
        uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52 # v2.1.0
        with:
          webhook: ${{ secrets.SLACK_CITR_OPERATIONS_WEBHOOK }}
          webhook-type: incoming-webhook
          payload-templated: true
          payload-file-path: slack_payload.json

      - name: Report failure (slack release-team)
        uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52 # v2.1.0
        with:
          webhook: ${{ secrets.SLACK_RELEASE_TEAM_WEBHOOK }}
          webhook-type: incoming-webhook
          payload-templated: true
          payload-file-path: slack_payload.json
